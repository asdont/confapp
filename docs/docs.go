// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Company",
            "url": "https://example.ru/",
            "email": "example@mail.ru"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/config": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "получить конфиг по названию сервиса и номеру версии конфига",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название сервиса удаляемого конфига",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Номер версии",
                        "name": "v",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "обновить одну версию конфига по названию сервиса и номеру версии",
                "parameters": [
                    {
                        "description": "Заменить кавычки на двойные - {'service': 'managed-k8s', 'v': 224, 'data': [{'key1': 'value1-1'}]}",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "type": "primitive"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "создать конфиг для нового сервиса",
                "parameters": [
                    {
                        "description": "Заменить кавычки на двойные - {'service': 'managed-k8s', 'data': [{'key1': 'value1'}, {'key2': 'value2'}]}",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "type": "primitive"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "delete"
                ],
                "summary": "удалить версию конфига по названию сервиса(помечает удалённым, удаляет через 90 дней)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название сервиса удаляемого конфига",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Номер версии",
                        "name": "v",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    }
                }
            }
        },
        "/v1/config/any": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "update"
                ],
                "summary": "обновить и/или добавить новые поля во все версии конфига сервиса",
                "parameters": [
                    {
                        "description": "Заменить кавычки на двойные - {'service': 'managed-k8s', 'data': [{'key1': 'changed_value'}]}",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "type": "primitive"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    }
                }
            }
        },
        "/v1/config/update": {
            "post": {
                "description": "Создаёт копию последней версии с новыми и/или измененными параметрами, под новым номером версии",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "create"
                ],
                "summary": "обновить последний конфиг",
                "parameters": [
                    {
                        "description": "Заменить кавычки на двойные - {'service': 'managed-k8s', 'data': [{'key3': 'value3'}]}",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "type": "primitive"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    }
                }
            }
        },
        "/v1/service": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "delete"
                ],
                "summary": "удалить сервис по названию(помечает удалёнными все версии, удаляет через 90 дней)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя удаляемого сервиса",
                        "name": "service",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPStatus"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.HTTPStatus": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "127.0.0.1:22952",
	BasePath:    "/api",
	Schemes:     []string{"http"},
	Title:       "API ConfApp",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
